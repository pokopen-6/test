package com.internousdev.wood.action;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.apache.struts2.interceptor.SessionAware;

import com.internousdev.wood.dao.BuyItemDAO;
import com.internousdev.wood.dto.ProductDTO;
import com.opensymphony.xwork2.ActionSupport;


public class BuyItemAction extends ActionSupport implements SessionAware {
	public Map<String, Object>session;
	private int productCount;
	private int product_price;
	private int price;
	//チェックボックスの値
	/*private ArrayList<BuyItemDTO> selectList;*/
	private List<String> selectItemList;
	//購入製品情報取得DAO
	private BuyItemDAO buyItemDAO = new BuyItemDAO();
	public String message;
	//buyItem.jspでチェックした時のフラグ
	private String selectFlg;

	ArrayList<ProductDTO> productList = new ArrayList<>();

	public String execute() throws SQLException {

		String result = SUCCESS;
		session.get("userId").toString();

		//合計金額の計算
		session.put("product_count", productCount);
		session.put("product_price", product_price);
		System.out.println(session.get("product_price"));
		int intCount = Integer.parseInt(session.get("product_count").toString());
		int intPrice = Integer.parseInt(session.get("product_price").toString());
		session.put("price", intCount * intPrice);
		System.out.println(session.get(price));



		if(selectFlg != null){
			selectChoose();
		}


		return result;

	}
/*
		//①チェックボックス選択情報の取得
		//jspから引っ張ったselectItemList
		String productName = session.get("product_name").toString();
		if(selectFlg == null){
			//DAOメソッド
			selectList = buyItemDAO.getSelectItemInfo(productName);
			//iterator でまわす
			Iterator<BuyItemDTO> iterator = selectList.iterator();

			if(!iterator.hasNext()){
				this.selectList = null;
				}

			}
		return result;
		*/


		/*String userId =session.get("user_id").toString();*/


public void selectChoose() throws SQLException {
		if(selectItemList == null){
			setMessage("チェックを入れてクレメンス");
			return;
		}
			int res = buyItemDAO.userChoose(selectItemList);
			if(res > 0){
System.out.println(res);

				// ↓iteratorで廻してあげる。iteratorはnewする必要がなく、iterator()を呼び出せばよい。
				Iterator<String> it = selectItemList.iterator();

				if (!(it.hasNext())) {
					selectItemList = null;
				}
			}

}
	public String getMessage(){
		return message;
	}
	public void setMessage(String message){
		this.message = message;
	}


	public void setProductCount(int productCount){
		this.productCount = productCount;
	}


	@Override
	public void setSession(Map<String, Object>session){
		this.session = session;
	}

}
